# This file is part of the Spectrum +4 Project.
# Licencing information can be found in the LICENCE file
# (C) 2019 Spectrum +4 Authors. All rights reserved.

# Generated from the files in the /test directory.

# This file is auto-generated by all.sh. DO NOT EDIT!

.text


.align 3
all_tests:
  .quad 0x0000000000000002                // Number of tests.
  .quad test_po_attr_test_case_1
  .quad test_po_change_test_case_1


##########################################################################
############# Test po_attr test case 1 ###################################
##########################################################################

.align 3
# Test case definition
test_po_attr_test_case_1:
  .quad test_po_attr_test_case_1_name
  .quad test_po_attr_test_case_1_setup_ram
  .quad test_po_attr_test_case_1_setup_sysvars
  .quad test_po_attr_test_case_1_setup_registers
  .quad test_po_attr_test_case_1_effects_ram
  .quad test_po_attr_test_case_1_effects_sysvars
  .quad test_po_attr_test_case_1_effects_registers
  .quad test_po_attr_test_case_1_exec

# Test case name
test_po_attr_test_case_1_name:
  .asciz "po_attr test case 1"

# Test case setup

.align 3
# RAM setup
test_po_attr_test_case_1_setup_ram:
  .quad 0                                 // Number of RAM entries = 0

.align 3
# System variables setup
test_po_attr_test_case_1_setup_sysvars:
  .quad 0b0000000000010100000000000100000000000000000000000000000000000000
                                          // Bits 38-39 = 0b01 => P_FLAG (sysvar index 19) is absolute value
                                          // Bits 50-51 = 0b01 => ATTR_T (sysvar index 25) is absolute value
                                          // Bits 52-53 = 0b01 => MASK_T (sysvar index 26) is absolute value
  .quad 0b0000000000000000000000000000000000000000000000000000000000000000
  .quad 151                               // [P_FLAG]
  .quad 149                               // [ATTR_T]
  .quad 86                                // [MASK_T]

.align 3
# Registers setup
test_po_attr_test_case_1_setup_registers:
  .quad 0b0000000000000000000000000000000000000000000000000000000000000001
                                          // Bits 0-1 = 0b01 => x0 (register index 0) is absolute value
  .quad display_file + 0x17780            // x0

# Test case effects

.align 3
# RAM effects
test_po_attr_test_case_1_effects_ram:

.align 3
# System variable effects
test_po_attr_test_case_1_effects_sysvars:
  .quad 0b0000000000000000000000000000000000000000000000000000000000000000
  .quad 0b0000000000000000000000000000000000000000000000000000000000000000

.align 3
# Registers effects
test_po_attr_test_case_1_effects_registers:
  .quad 0b0000000000000001000000000001010101010101010101000000000000000101
                                          // Bits 0-1 = 0b01 => x0 (register index 0) is absolute value
                                          // Bits 2-3 = 0b01 => x1 (register index 1) is absolute value
                                          // Bits 18-19 = 0b01 => x9 (register index 9) is absolute value
                                          // Bits 20-21 = 0b01 => x10 (register index 10) is absolute value
                                          // Bits 22-23 = 0b01 => x11 (register index 11) is absolute value
                                          // Bits 24-25 = 0b01 => x12 (register index 12) is absolute value
                                          // Bits 26-27 = 0b01 => x13 (register index 13) is absolute value
                                          // Bits 28-29 = 0b01 => x14 (register index 14) is absolute value
                                          // Bits 30-31 = 0b01 => x15 (register index 15) is absolute value
                                          // Bits 32-33 = 0b01 => x16 (register index 16) is absolute value
                                          // Bits 34-35 = 0b01 => x17 (register index 17) is absolute value
                                          // Bits 36-37 = 0b01 => x18 (register index 18) is absolute value
                                          // Bits 48-49 = 0b01 => x24 (register index 24) is absolute value
  .quad 151                               // x0
  .quad 22165                             // x1
  .quad display_file                      // x9
  .quad 4                                 // x10
  .quad 96128                             // x11
  .quad 108                               // x12
  .quad 85401593570131968                 // x13
  .quad 445                               // x14
  .quad 14757451553962983424              // x15
  .quad 2704                              // x16
  .quad 71                                // x17
  .quad 5                                 // x18
  .quad attributes_file                   // x24

# Test case execution

.align 2
test_po_attr_test_case_1_exec:
  stp     x29, x30, [sp, #-16]!           // Push frame pointer, procedure link register on stack.
  mov     x29, sp                         // Update frame pointer to new stack location.
  ldp     x0, x1, [x0]                    // Restore x0, x1 values
  bl      po_attr
  ldp     x29, x30, [sp], #16             // Pop frame pointer, procedure link register off stack.
  ret

##########################################################################


##########################################################################
############# Test po_change test case 1 #################################
##########################################################################

.align 3
# Test case definition
test_po_change_test_case_1:
  .quad test_po_change_test_case_1_name
  .quad test_po_change_test_case_1_setup_ram
  .quad test_po_change_test_case_1_setup_sysvars
  .quad test_po_change_test_case_1_setup_registers
  .quad test_po_change_test_case_1_effects_ram
  .quad test_po_change_test_case_1_effects_sysvars
  .quad test_po_change_test_case_1_effects_registers
  .quad test_po_change_test_case_1_exec

# Test case name
test_po_change_test_case_1_name:
  .asciz "po_change test case 1"

# Test case setup

.align 3
# RAM setup
test_po_change_test_case_1_setup_ram:
  .quad 3                                 // Number of RAM entries = 3
  .quad test_po_change_test_case_1_setup_ram_channel_block
  .quad test_po_change_test_case_1_setup_ram_new_input_routine
  .quad test_po_change_test_case_1_setup_ram_old_input_routine

.align 3
test_po_change_test_case_1_setup_ram_channel_block:
  .quad 16                                // 16 => pointer
  .quad 2                                 // old_input_routine
  .asciz "channel_block"                  // name: "channel_block"

.align 3
test_po_change_test_case_1_setup_ram_new_input_routine:
  .quad 8                                 // 8 => quad
  .quad 18364758544493064720
  .asciz "new_input_routine"              // name: "new_input_routine"

.align 3
test_po_change_test_case_1_setup_ram_old_input_routine:
  .quad 8                                 // 8 => quad
  .quad 81985529216486895
  .asciz "old_input_routine"              // name: "old_input_routine"

.align 3
# System variables setup
test_po_change_test_case_1_setup_sysvars:
  .quad 0b0000000000000000000000000000000000000000000000000000000000000000
  .quad 0b0000000000000000000000000000000000000000000011000000000000000000
                                          // Bits 18-19 = 0b11 => CURCHL (sysvar index 41) is pointer
  .quad 0x0000000000000000                // [CURCHL] = channel_block

.align 3
# Registers setup
test_po_change_test_case_1_setup_registers:
  .quad 0b0000000000000000000000000000000000000000000000000000001100000000
                                          // Bits 8-9 = 0b11 => x4 (register index 4) is pointer
  .quad 0x0000000000000001                // x4 = new_input_routine

# Test case effects

.align 3
# RAM effects
test_po_change_test_case_1_effects_ram:
  .quad 0b0000000000000000000000000000000000000000000000000000000000000011
                                          // Bits 0-1 = 0b11 => channel_block (RAM entry index 0) is pointer
  .quad 0x0000000000000001                // [channel_block] = new_input_routine

.align 3
# System variable effects
test_po_change_test_case_1_effects_sysvars:
  .quad 0b0000000000000000000000000000000000000000000000000000000000000000
  .quad 0b0000000000000000000000000000000000000000000000000000000000000000

.align 3
# Registers effects
test_po_change_test_case_1_effects_registers:
  .quad 0b0000000000000000000000000000000000000000000000000000110000000000
                                          // Bits 10-11 = 0b11 => x5 (register index 5) is pointer
  .quad 0x0000000000000000                // x5 = channel_block

# Test case execution

.align 2
test_po_change_test_case_1_exec:
  stp     x29, x30, [sp, #-16]!           // Push frame pointer, procedure link register on stack.
  mov     x29, sp                         // Update frame pointer to new stack location.
  ldp     x0, x1, [x0]                    // Restore x0, x1 values
  bl      po_change
  ldp     x29, x30, [sp], #16             // Pop frame pointer, procedure link register off stack.
  ret

##########################################################################
