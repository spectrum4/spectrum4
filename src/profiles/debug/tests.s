# This file is part of the Spectrum +4 Project.
# Licencing information can be found in the LICENCE file
# (C) 2019 Spectrum +4 Authors. All rights reserved.

# Generated from the files in the /test directory.

# This file is auto-generated by all.sh. DO NOT EDIT!


.include "test_cl_addr.s"
.include "test_po_attr.s"
.include "test_po_change.s"
.include "test_po_search.s"


.text
.align 3
all_tests:
  .quad 5                                 // total number of tests
  .quad test_cl_addr
  .quad test_po_attr
  .quad test_po_change
  .quad test_po_search


.align 3
test_cl_addr:
  .quad 1                                 // number of cl_addr tests
  .quad cl_addr_shim
  .quad cl_addr_1


.align 2
cl_addr_shim:
  stp     x29, x30, [sp, #-16]!           // Push frame pointer, procedure link register on stack.
  mov     x29, sp                         // Update frame pointer to new stack location.
  ldp     x0, x1, [x0]                    // Restore x0, x1 values
  bl      cl_addr
  ldp     x29, x30, [sp], #16             // Pop frame pointer, procedure link register off stack.
  ret


.align 3
cl_addr_1:
  .quad 0
  .quad cl_addr_1_setup_regs
  .quad 0
  .quad cl_addr_1_effects_regs
  .asciz "cl_addr_1"


.align 3
test_po_attr:
  .quad 1                                 // number of po_attr tests
  .quad po_attr_shim
  .quad po_attr_1


.align 2
po_attr_shim:
  stp     x29, x30, [sp, #-16]!           // Push frame pointer, procedure link register on stack.
  mov     x29, sp                         // Update frame pointer to new stack location.
  ldp     x0, x1, [x0]                    // Restore x0, x1 values
  bl      po_attr
  ldp     x29, x30, [sp], #16             // Pop frame pointer, procedure link register off stack.
  ret


.align 3
po_attr_1:
  .quad po_attr_1_setup
  .quad po_attr_1_setup_regs
  .quad po_attr_1_effects
  .quad po_attr_1_effects_regs
  .asciz "po_attr_1"


.align 3
test_po_change:
  .quad 1                                 // number of po_change tests
  .quad po_change_shim
  .quad po_change_1


.align 2
po_change_shim:
  stp     x29, x30, [sp, #-16]!           // Push frame pointer, procedure link register on stack.
  mov     x29, sp                         // Update frame pointer to new stack location.
  ldp     x0, x1, [x0]                    // Restore x0, x1 values
  bl      po_change
  ldp     x29, x30, [sp], #16             // Pop frame pointer, procedure link register off stack.
  ret


.align 3
po_change_1:
  .quad po_change_1_setup
  .quad po_change_1_setup_regs
  .quad po_change_1_effects
  .quad po_change_1_effects_regs
  .asciz "po_change_1"


.align 3
test_po_search:
  .quad 2                                 // number of po_search tests
  .quad po_search_shim
  .quad po_search_1
  .quad po_search_2


.align 2
po_search_shim:
  stp     x29, x30, [sp, #-16]!           // Push frame pointer, procedure link register on stack.
  mov     x29, sp                         // Update frame pointer to new stack location.
  ldp     x0, x1, [x0]                    // Restore x0, x1 values
  bl      po_search
  ldp     x29, x30, [sp], #16             // Pop frame pointer, procedure link register off stack.
  ret


.align 3
po_search_1:
  .quad 0
  .quad po_search_1_setup_regs
  .quad 0
  .quad po_search_1_effects_regs
  .asciz "po_search_1"


.align 3
po_search_2:
  .quad 0
  .quad po_search_2_setup_regs
  .quad 0
  .quad po_search_2_effects_regs
  .asciz "po_search_2"
