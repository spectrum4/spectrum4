#!/usr/bin/env bash

# This file is part of the Spectrum +4 Project.
# Licencing information can be found in the LICENCE file
# (C) 2021 Spectrum +4 Authors. All rights reserved.

function header {
  echo '# This file is part of the Spectrum +4 Project.'
  echo '# Licencing information can be found in the LICENCE file'
  echo '# (C) 2021 Spectrum +4 Authors. All rights reserved.'
  echo ''
  echo "# This file is auto-generated by ${0##*/}." 'DO NOT EDIT!'
  echo ''
  echo '.text'
}

cd "$(dirname "${0}")"

{
  header
  for df_sz in 1 12 19 24; do
    hexdfsz=$(printf "%02x" $df_sz)
    for ((b=df_sz+1; b<25; b+=3)); do
      hexb=$(printf "%02x" $b)
      echo
      echo
      echo "po_scr_upper_screen_${hexb}_${hexdfsz}_setup:"
      echo "  ld      hl, 0x4048"
      echo "  inc     (hl)                            ; touch display file so we notice if there is scrolling"
      echo "  _resbit 1, FLAGS                        ; not printing"
      echo "  _resbit 0, TV_FLAG                      ; not lower screen"
      echo "  _strb   0x${hexdfsz}, DF_SZ             ; lower screen is ${df_sz} lines"
      echo "  ret"
      echo
      echo "po_scr_upper_screen_${hexb}_${hexdfsz}_setup_regs:"
      echo "  ld      bc, 0x${hexb}0d                 ; B > [DF_SZ]"
      echo "  ret"
      echo
      echo "po_scr_upper_screen_${hexb}_${hexdfsz}_effects:"
      echo "  ld      bc, 0x${hexb}0d"
      echo "  call    cl_set                          ; since B > [DF_SZ] (${b}>${df_sz}) this routine simply calls CL_SET with same inputs"
      echo "  ret"
      echo
      echo "po_scr_upper_screen_${hexb}_${hexdfsz}_effects_regs:"
      echo "  call    cl_set                          ; since B > [DF_SZ] (${b}>${df_sz}) this routine simply calls CL_SET with same inputs"
      echo "  ret"
    done
  done
} > "test_po_scr.upperscreen.s"

{
  header
  for df_sz in 1 12 19 24; do
    hexdfsz=$(printf "%02x" $df_sz)
    for ((b=25-df_sz; b<25; b+=3)); do
      [ "${b}" -lt 2 ] && continue
      hexb=$(printf "%02x" $b)
      echo
      echo
      echo "po_scr_lower_screen_${hexb}_${hexdfsz}_setup:"
      echo "  ld      hl, 0x57ff"
      echo "  inc     (hl)                            ; touch last byte of display file so we notice if there is lower screen scrolling"
      echo "  _resbit 1, FLAGS                        ; not printing"
      echo "  _setbit 0, TV_FLAG                      ; lower screen in use"
      echo "  _strb   0x${hexdfsz}, DF_SZ                     ; lower screen is ${df_sz} lines"
      echo "  ret"
      echo
      echo "po_scr_lower_screen_${hexb}_${hexdfsz}_setup_regs:"
      echo "  ld      bc, 0x${hexb}13                 ; B > 24-[DF_SZ]"
      echo "  ret"
      echo
      echo "po_scr_lower_screen_${hexb}_${hexdfsz}_effects:"
      echo "  ld      bc, 0x${hexb}13"
      echo "  call    cl_set                          ; since B > 24-[DF_SZ] (${b}>$((24-df_sz))) this routine simply calls CL_SET (no scrolling, not out-of-screen)"
      echo "  ret"
      echo
      echo "po_scr_lower_screen_${hexb}_${hexdfsz}_effects_regs:"
      echo "  call    cl_set                          ; since B > 24-[DF_SZ] (${b}>$((24-df_sz))) this routine simply calls CL_SET (no scrolling, not out-of-screen)"
      echo "  ret"
    done
  done
} > "test_po_scr.lowerscreen.s"
