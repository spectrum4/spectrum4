.gitignore

include_rules

import Z80_TOOLCHAIN_PREFIX=z80-unknown-elf-

# Generate Tests

: test_cl_addr.sh |> !calls-asm-format |> test_cl_addr.gen-s {gen-test}
: test_cl_chan.sh |> !calls-asm-format |> test_cl_chan.gen-s {gen-test}
: test_cl_set.sh |> !calls-asm-format |> test_cl_set.lowerscreen.gen-s test_cl_set.printer.gen-s test_cl_set.upperscreen.gen-s {gen-test}
: test_po_attr.sh |> !calls-asm-format |> test_po_attr.gen-s {gen-test}
: test_po_mosaic_half.sh |> !calls-asm-format |> test_po_mosaic_half.0.gen-s test_po_mosaic_half.1.gen-s test_po_mosaic_half.2.gen-s test_po_mosaic_half.3.gen-s {gen-test}
: test_po_scr.sh |> !calls-asm-format |> test_po_scr.lowerscreen.gen-s test_po_scr.upperscreen.gen-s {gen-test}
: test_po_tokens.sh |> !calls-asm-format |> %B.f0.gen-s %B.f1.gen-s %B.s0.gen-s %B.s1.gen-s {gen-test}
: test_po_t_udg.sh |> !calls-asm-format |> %B.f000.gen-s %B.f001.gen-s %B.f010.gen-s %B.f011.gen-s %B.f100.gen-s %B.f101.gen-s %B.f110.gen-s %B.f111.gen-s %B.s000.gen-s %B.s001.gen-s %B.s010.gen-s %B.s011.gen-s %B.s100.gen-s %B.s101.gen-s %B.s110.gen-s %B.s111.gen-s {gen-test}

# Build Tests

: randomdata.sh | ../../../utils/asm-format/asm-format |> ./randomdata.sh > %o |> randomdata.gen-s
: foreach runtests.s randomdata.gen-s |> $(Z80_TOOLCHAIN_PREFIX)as -o %o %f |> %B.o

: foreach test_*.s test_*.gen-s | ../../../utils/asm-format/asm-format |> ^o^ ./tests.sh %f > %o |> %B.runner {gen-testlist}
: foreach {gen-testlist} | {gen-test} |> ^o^ $(Z80_TOOLCHAIN_PREFIX)as -o %o %f |> %B.o {test-o}
: foreach {test-o} | ../roms/rom0.elf ../roms/rom1.elf runtests.o randomdata.o |> ^o^ $(Z80_TOOLCHAIN_PREFIX)ld -N -Ttext=0x8100 --allow-multiple-definition -R %1i -R %2i -o %o %3i %f %4i |> %B.elf {test-elf}
: foreach {test-elf} |> ^o^ $(Z80_TOOLCHAIN_PREFIX)objcopy --set-start=0x8100 %f -O binary %o |> %B.img
: foreach {test-elf} |> $(Z80_TOOLCHAIN_PREFIX)objdump -d %f > %o |> %B.disassembly
: foreach {test-elf} |> $(Z80_TOOLCHAIN_PREFIX)readelf -W -s %f > %o |> %B.symbols
: foreach test_*.img | ../../../utils/tzx-code-loader/tzx-code-loader |> ^o^ Z80_TOOLCHAIN_PREFIX=$(Z80_TOOLCHAIN_PREFIX) ./create-tzx.sh %B.elf %f %o %g |> %B.tzx {test-tzx}
: foreach {test-tzx} |> ^o^ tape2wav %f %o |> %B.wav
: foreach {test-tzx} |> ^o^ ./fuse-tests.sh %B |> %B.log %B.fuselog

: foreach *.s *.gen-s *.runner |> !check-asm-formatted |>
: foreach *.sh |> !check-shell-formatted |>
