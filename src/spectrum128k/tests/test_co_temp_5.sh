#!/usr/bin/env bash

# This file is part of the Spectrum +4 Project.
# Licencing information can be found in the LICENCE file
# (C) 2021 Spectrum +4 Authors. All rights reserved.

set -eu
set -o pipefail
export SHELLOPTS

cd "$(dirname "${0}")"

# This initial state data was generated randomly, except for registers A and D.
# A is assigned either 0x12 (control character "FLASH") or 0x13 (control
# character "BRIGHT"), and D has a random value of either 0x00, 0x01 or 0x08
# (for FLASH/BRIGHT 0, FLASH/BRIGHT 1 or FLASH/BRIGHT 8).
#
# The end state values were reverse engineered by running the tests first with
# incorrect values, and then scraping the test failure logs to get the correct
# values, and then plugging them back into this data, in place of the incorrect
# values.
#
# This was done in order to have a set of test data for the Spectrum +4
# co_temp_5 routine, taking a random set of input values for (ATTR_T, MASK_T)
# and determining the values that the registers and system variables are
# updated to on the Spectrum 128K, to make sure the Spectrum +4 routine
# performs the same updates, for the random set of test cases.

input='0x06 0x38 0x12 0x01 0x34 0x86 0x38 0x28 0x80
0x08 0x20 0x12 0x00 0xd0 0x08 0x20 0x20 0x00
0xf9 0x08 0x13 0x00 0xec 0xb9 0x08 0x08 0x00
0xfb 0xa0 0x12 0x00 0x57 0x7b 0x20 0x20 0x00
0xef 0x2b 0x13 0x00 0x78 0xaf 0x2b 0x2c 0x00
0xa2 0x64 0x13 0x01 0x06 0xe2 0x24 0x24 0x40
0x13 0xb0 0x13 0x00 0xc2 0x13 0xb0 0xa0 0x00
0x28 0xde 0x13 0x00 0x04 0x28 0x9e 0x88 0x00
0xf5 0x45 0x12 0x01 0x1f 0xf5 0x45 0x00 0x80
0x02 0x38 0x12 0x08 0x26 0x02 0xb8 0xac 0x04
0x21 0x03 0x12 0x00 0xaa 0x21 0x03 0x04 0x00
0xd1 0x43 0x13 0x00 0x04 0x91 0x03 0x04 0x00
0x3b 0xc1 0x12 0x08 0x83 0x3b 0xc1 0x80 0x04
0x0c 0xea 0x13 0x08 0xa9 0x0c 0xea 0xa8 0x02
0xdf 0x12 0x13 0x08 0x7b 0x9f 0x52 0x00 0x02
0x39 0x9b 0x13 0x00 0x26 0x39 0x9b 0x88 0x00
0x5f 0x38 0x12 0x00 0xe5 0x5f 0x38 0x28 0x00
0xd1 0x48 0x13 0x08 0x83 0x91 0x48 0x0c 0x02
0x8e 0x78 0x12 0x08 0xec 0x0e 0xf8 0xa8 0x04
0x82 0x5a 0x12 0x01 0x6c 0x82 0x5a 0x0c 0x80
0x20 0x40 0x13 0x00 0xc9 0x20 0x00 0x44 0x00
0xc6 0xb7 0x12 0x08 0x59 0x46 0xb7 0xa4 0x04
0xa5 0xf0 0x13 0x00 0xda 0xa5 0xb0 0xa0 0x00
0x9e 0x22 0x12 0x00 0xbf 0x1e 0x22 0x24 0x00
0xd5 0xc8 0x13 0x00 0xa9 0x95 0x88 0x8c 0x00
0x98 0xbf 0x12 0x00 0x9d 0x18 0x3f 0x2c 0x00
0x94 0x32 0x13 0x00 0xc0 0x94 0x32 0x20 0x00
0x18 0xb5 0x12 0x08 0x17 0x18 0xb5 0xa0 0x04
0x6e 0xf8 0x13 0x08 0xa3 0x2e 0xf8 0xa8 0x02
0xdc 0xd5 0x13 0x01 0x5c 0xdc 0x95 0x84 0x40
0x3f 0xf4 0x13 0x00 0x99 0x3f 0xb4 0xa4 0x00
0x84 0x34 0x13 0x00 0xab 0x84 0x34 0x20 0x00
0xbf 0x65 0x12 0x00 0xb6 0x3f 0x65 0x24 0x00
0xd5 0xa4 0x12 0x08 0xb1 0x55 0xa4 0xa0 0x04
0x39 0xd5 0x12 0x00 0xf8 0x39 0x55 0x04 0x00
0x06 0x36 0x13 0x00 0xb1 0x06 0x36 0x24 0x00
0x38 0xea 0x13 0x01 0x9d 0x78 0xaa 0xac 0x40
0x08 0xd8 0x12 0x00 0xa5 0x08 0x58 0x08 0x00
0xc8 0xe5 0x12 0x00 0x34 0x48 0x65 0x24 0x00
0x4e 0xdc 0x12 0x01 0x03 0xce 0x5c 0x0c 0x80
0x85 0x19 0x12 0x00 0xe1 0x05 0x19 0x08 0x00
0xa4 0xc7 0x12 0x00 0x11 0x24 0x47 0x04 0x00
0x00 0x91 0x12 0x01 0xe6 0x80 0x11 0x04 0x80
0x0a 0xc5 0x12 0x08 0xd5 0x0a 0xc5 0x84 0x04
0x09 0x7d 0x13 0x00 0xfb 0x09 0x3d 0x28 0x00
0xd0 0xf0 0x13 0x00 0xb6 0x90 0xb0 0xa0 0x00
0x6c 0x3c 0x12 0x00 0x62 0x6c 0x3c 0x2c 0x00
0xfe 0x4b 0x13 0x00 0x66 0xbe 0x0b 0x08 0x00
0x3f 0xc8 0x13 0x01 0x24 0x7f 0x88 0x8c 0x40
0xc6 0x3e 0x13 0x08 0x7b 0x86 0x7e 0x2c 0x02
0x1a 0x54 0x12 0x08 0x5a 0x1a 0xd4 0x84 0x04
0xf4 0xef 0x12 0x00 0x82 0x74 0x6f 0x2c 0x00
0xad 0x2f 0x13 0x00 0xbe 0xad 0x2f 0x28 0x00
0x29 0x49 0x12 0x01 0xdd 0xa9 0x49 0x08 0x80
0xaf 0x9d 0x13 0x00 0x4d 0xaf 0x9d 0x88 0x00
0xcc 0x8a 0x13 0x00 0x54 0x8c 0x8a 0x88 0x00
0x0f 0x5a 0x12 0x00 0x2a 0x0f 0x5a 0x0c 0x00
0xbb 0x16 0x12 0x01 0x90 0xbb 0x16 0x00 0x80
0xb4 0x9d 0x13 0x01 0xc5 0xf4 0x9d 0x88 0x40
0xd2 0xaf 0x13 0x01 0x44 0xd2 0xaf 0xac 0x40
0x0d 0x84 0x12 0x00 0x09 0x0d 0x04 0x00 0x00
0x12 0x3c 0x13 0x00 0x56 0x12 0x3c 0x2c 0x00
0x29 0xae 0x12 0x01 0xc5 0xa9 0x2e 0x2c 0x80
0x8b 0xb6 0x12 0x01 0xe8 0x8b 0x36 0x24 0x80
0xbd 0x02 0x13 0x01 0xe3 0xfd 0x02 0x00 0x40
0x31 0xe2 0x13 0x08 0x5e 0x31 0xe2 0xa4 0x02
0x64 0x2d 0x13 0x08 0x3f 0x24 0x6d 0x28 0x02
0xea 0x42 0x12 0x08 0x08 0x6a 0xc2 0x80 0x04
0xa8 0xb8 0x12 0x08 0xd0 0x28 0xb8 0xac 0x04
0x74 0x6e 0x13 0x00 0xc7 0x34 0x2e 0x2c 0x00
0xab 0x94 0x12 0x08 0x67 0x2b 0x94 0x80 0x04
0xea 0xd8 0x12 0x00 0x33 0x6a 0x58 0x08 0x00
0xab 0xeb 0x12 0x01 0xe9 0xab 0x6b 0x28 0x80
0x3e 0x99 0x13 0x01 0xe7 0x7e 0x99 0x8c 0x40
0xf1 0x6c 0x12 0x08 0x63 0x71 0xec 0xa8 0x04
0x1c 0xfd 0x12 0x00 0xe8 0x1c 0x7d 0x2c 0x00
0x9d 0xe4 0x12 0x08 0x29 0x1d 0xe4 0xa4 0x04
0x40 0xd2 0x12 0x01 0x0c 0xc0 0x52 0x00 0x80
0x81 0x18 0x12 0x08 0x6a 0x01 0x98 0x88 0x04
0x63 0xc5 0x12 0x08 0x35 0x63 0xc5 0x84 0x04
0xde 0x67 0x12 0x00 0x38 0x5e 0x67 0x20 0x00
0xe6 0xd6 0x13 0x08 0x64 0xa6 0xd6 0x80 0x02
0x0b 0xde 0x12 0x00 0xdd 0x0b 0x5e 0x08 0x00
0x88 0x74 0x12 0x00 0xa4 0x08 0x74 0x24 0x00
0x8a 0xce 0x13 0x00 0xcf 0x8a 0x8e 0x8c 0x00
0xc8 0x58 0x12 0x00 0x3f 0x48 0x58 0x08 0x00
0xda 0xeb 0x13 0x01 0xa1 0xda 0xab 0xa8 0x40
0xa9 0x9e 0x13 0x08 0x93 0xa9 0xde 0x8c 0x02
0x06 0x7f 0x12 0x08 0xca 0x06 0xff 0xac 0x04
0x6b 0xc3 0x13 0x01 0xd1 0x6b 0x83 0x80 0x40
0x7a 0xb9 0x12 0x01 0x78 0xfa 0x39 0x2c 0x80
0xb7 0xb3 0x13 0x08 0x57 0xb7 0xf3 0xa4 0x02
0xeb 0xe9 0x13 0x08 0x61 0xab 0xe9 0xa8 0x02
0x6a 0xed 0x13 0x08 0xcc 0x2a 0xed 0xac 0x02
0x53 0x05 0x12 0x01 0x05 0xd3 0x05 0x04 0x80
0x10 0x02 0x12 0x01 0x53 0x90 0x02 0x00 0x80
0xe4 0x30 0x12 0x08 0x56 0x64 0xb0 0xa0 0x04
0x4f 0x3f 0x12 0x00 0x77 0x4f 0x3f 0x2c 0x00
0xa7 0x51 0x13 0x01 0x3c 0xe7 0x11 0x04 0x40
0x39 0x7b 0x13 0x01 0x21 0x79 0x3b 0x28 0x40
0x32 0x21 0x12 0x08 0xeb 0x32 0xa1 0xa0 0x04
0xea 0x93 0x13 0x01 0xb2 0xea 0x93 0x84 0x40
0x32 0x03 0x12 0x01 0x06 0xb2 0x03 0x04 0x80
0x7f 0x33 0x12 0x00 0x19 0x7f 0x33 0x24 0x00
0xd2 0xe4 0x12 0x08 0xb0 0x52 0xe4 0xa4 0x04
0x60 0xed 0x13 0x08 0x9c 0x20 0xed 0xac 0x02
0xcb 0xa2 0x13 0x00 0xae 0x8b 0xa2 0xa0 0x00
0xdf 0xaf 0x13 0x01 0x5b 0xdf 0xaf 0xac 0x40
0x19 0x4f 0x13 0x01 0x74 0x59 0x0f 0x0c 0x40
0xc8 0x21 0x13 0x01 0xcd 0xc8 0x21 0x24 0x40
0x81 0x13 0x12 0x00 0xea 0x01 0x13 0x00 0x00
0xe3 0xf2 0x12 0x00 0xca 0x63 0x72 0x24 0x00
0xce 0x3a 0x13 0x00 0x8a 0x8e 0x3a 0x2c 0x00
0xe1 0x18 0x13 0x01 0x86 0xe1 0x18 0x0c 0x40
0xeb 0x4e 0x12 0x08 0x6c 0x6b 0xce 0x88 0x04
0x7a 0x26 0x13 0x00 0x56 0x3a 0x26 0x20 0x00
0xc5 0xe6 0x13 0x01 0xce 0xc5 0xa6 0xa4 0x40
0xbd 0x9a 0x13 0x01 0xa8 0xfd 0x9a 0x8c 0x40
0x5f 0xa1 0x13 0x08 0xfa 0x1f 0xe1 0xa4 0x02
0xd4 0xc8 0x12 0x01 0x45 0xd4 0x48 0x0c 0x80
0x36 0xb4 0x12 0x00 0x23 0x36 0x34 0x20 0x00
0xa1 0xb9 0x13 0x00 0x65 0xa1 0xb9 0xa8 0x00
0x79 0x0d 0x12 0x00 0xe5 0x79 0x0d 0x08 0x00
0xce 0xa8 0x12 0x08 0x9f 0x4e 0xa8 0xa8 0x04
0x3f 0xba 0x12 0x00 0xf1 0x3f 0x3a 0x2c 0x00
0x31 0xb8 0x13 0x00 0x57 0x31 0xb8 0xac 0x00
0xd1 0xa8 0x12 0x00 0xa6 0x51 0x28 0x2c 0x00
0x3e 0xca 0x13 0x00 0x8b 0x3e 0x8a 0x88 0x00'
{

  echo '# This file is part of the Spectrum +4 Project.'
  echo '# Licencing information can be found in the LICENCE file'
  echo '# (C) 2021 Spectrum +4 Authors. All rights reserved.'
  echo
  echo "# This file is auto-generated by ${0##*/}." 'DO NOT EDIT!'
  echo
  echo
  echo '.text'

  i=0
  echo "${input}" | while read attr_t mask_t a d f attr_t_upd mask_t_upd f_upd c_upd; do
    testname=$(printf "co_temp_5_flash_bright_%02x" $i)
    i=$((i + 1))
    echo
    echo
    echo "${testname}_setup:"
    echo "  _strb   ${attr_t}, ATTR_T"
    echo "  _strb   ${mask_t}, MASK_T"
    echo "  ret"
    echo
    echo "${testname}_setup_regs:"
    echo "  ld      a, ${a}"
    echo "  ld      d, ${d}"
    echo "  ldf     ${f}"
    echo "  ret"
    echo
    echo "${testname}_effects:"
    if [ "${attr_t_upd}" != "${attr_t}" ]; then
      echo "  _strb   ${attr_t_upd}, ATTR_T"
    fi
    if [ "${mask_t_upd}" != "${mask_t}" ]; then
      echo "  _strb   ${mask_t_upd}, MASK_T"
    fi
    echo "  ret"
    echo
    echo "${testname}_effects_regs:"
    if [ "${a}" == "0x12" ]; then
      echo "  ld      a, 0x80"
    else
      echo "  ld      a, 0x40"
    fi
    echo "  ld      b, a"
    echo "  ld      c, ${c_upd}"
    echo "  ldf     ${f_upd}"
    echo "  ld      hl, P_FLAG"
    echo "  ret"
  done
} | ../../../utils/asm-format/asm-format > "test_co_temp_5.flash_bright.gen-s"

# attr_t mask_t p_flag a d f c_upd f_upd
input='0x84 0x49 0xa0 0x11 0x09 0x98 0x00 0xa0
0xb4 0x0c 0xbe 0x11 0x08 0xc7 0xb4 0xac
0x9e 0xce 0xc6 0x10 0x09 0xc8 0x07 0x80
0x09 0x46 0xaf 0x11 0x08 0xa4 0x09 0xac
0x4b 0x74 0xfc 0x11 0x09 0x23 0x38 0xac
0x19 0x4a 0xbd 0x11 0x08 0x7a 0x19 0xac
0x00 0x9f 0xfc 0x11 0x08 0x57 0x00 0xa8
0xd4 0x33 0x77 0x10 0x08 0xaf 0xd4 0x20
0x6d 0x48 0x5e 0x10 0x03 0x49 0x03 0x0c
0xbf 0x5f 0x39 0x10 0x07 0x55 0x07 0x28
0x8b 0x8d 0x21 0x11 0x09 0x71 0x38 0x20
0x45 0x58 0xda 0x11 0x05 0x13 0x28 0x8c
0xb1 0xf1 0x0a 0x11 0x09 0xa6 0x38 0x08
0x31 0x8f 0xe5 0x11 0x07 0x09 0x38 0xa4
0x82 0xd3 0x06 0x10 0x09 0xda 0x07 0x00
0xd6 0x0e 0x16 0x10 0x08 0x26 0xd6 0x04
0xd5 0x8f 0x26 0x10 0x09 0xeb 0x07 0x24
0xba 0x70 0x89 0x10 0x08 0xa2 0xba 0x88
0xd8 0xb0 0x7b 0x10 0x09 0xeb 0x07 0x2c
0xbc 0x22 0x4f 0x10 0x08 0x5b 0xbc 0x08
0xd2 0xdc 0x8e 0x11 0x08 0x8c 0xd2 0x8c
0x6f 0x83 0x86 0x10 0x01 0x65 0x01 0x80
0xc1 0xd7 0xee 0x11 0x08 0xd3 0xc1 0xa8
0x23 0x1d 0x7f 0x10 0x04 0xd8 0x04 0x2c
0x80 0xc2 0x01 0x11 0x08 0x69 0x80 0x00
0xd6 0x5e 0x15 0x11 0x02 0x8e 0x10 0x00
0xea 0x07 0x64 0x10 0x02 0xb2 0x02 0x20
0xc2 0x74 0x90 0x11 0x08 0x7c 0xc2 0x84
0x0e 0x98 0xc3 0x10 0x09 0x61 0x07 0x80
0xc4 0xec 0x87 0x10 0x08 0xd2 0xc4 0x84
0x1a 0x90 0x36 0x11 0x08 0x13 0x1a 0x24
0x11 0xec 0xf3 0x10 0x08 0xed 0x11 0xa0
0xbd 0xd0 0xfb 0x11 0x09 0x62 0x00 0xa8
0xff 0x95 0x04 0x10 0x08 0x3f 0xff 0x00
0xcb 0xde 0x6f 0x11 0x09 0x7a 0x38 0x2c
0x26 0x11 0xdf 0x10 0x06 0xd1 0x06 0x8c
0xc4 0x33 0x21 0x10 0x04 0xce 0x04 0x24
0xeb 0x4a 0xef 0x10 0x09 0xb0 0x00 0xac
0x0b 0x38 0xa8 0x10 0x07 0xff 0x07 0xa8
0xd4 0x8f 0x5f 0x10 0x09 0x6c 0x07 0x0c
0x5f 0x10 0x4d 0x10 0x08 0xf7 0x5f 0x0c
0x88 0x7e 0xaf 0x10 0x08 0x39 0x88 0xac
0x61 0x80 0xd6 0x10 0x09 0xfe 0x00 0x80
0x48 0xcc 0x29 0x11 0x09 0x1b 0x38 0x2c
0x39 0x1b 0x6d 0x11 0x02 0xe5 0x10 0x2c
0xd5 0xcc 0x6a 0x11 0x02 0x06 0x10 0x28
0xb4 0x99 0xe5 0x11 0x09 0x08 0x00 0xa0
0x53 0xc7 0x4b 0x11 0x09 0x14 0x38 0x0c
0x0e 0xd8 0x8b 0x11 0x02 0xe1 0x10 0x8c
0x24 0x9f 0xc4 0x11 0x00 0xf7 0x00 0x84
0x12 0xa1 0x07 0x10 0x09 0xf9 0x07 0x04
0xff 0x9d 0x69 0x11 0x06 0xa4 0x30 0x28
0xf5 0x7c 0xb2 0x11 0x08 0xf3 0xf5 0xa4
0xac 0xfc 0x80 0x11 0x09 0xa4 0x00 0x84
0x06 0x9e 0xbb 0x11 0x08 0x2e 0x06 0xac
0xc4 0x79 0xdb 0x10 0x07 0x09 0x07 0x88
0x16 0x5e 0xfc 0x11 0x09 0x9a 0x00 0xac
0x1d 0xfe 0x12 0x10 0x09 0xa7 0x07 0x04
0x41 0x8e 0xa0 0x11 0x09 0xfb 0x38 0xa0
0xa5 0xf5 0xc6 0x11 0x03 0xb5 0x18 0x80
0x31 0xd7 0x0b 0x11 0x09 0xa9 0x38 0x0c
0xbc 0x0c 0xd1 0x11 0x09 0xe6 0x00 0x84
0xb5 0xd8 0x82 0x11 0x00 0xa5 0x00 0x84
0x98 0x17 0x32 0x11 0x06 0xf6 0x30 0x20
0x14 0x8f 0xa1 0x10 0x01 0x06 0x01 0xa0
0x17 0x54 0xba 0x10 0x08 0xce 0x17 0xac
0x9e 0xba 0x48 0x10 0x08 0x0c 0x9e 0x0c
0xd8 0xa1 0x54 0x10 0x06 0x8b 0x06 0x04
0x32 0x08 0x39 0x11 0x08 0x10 0x32 0x2c
0xba 0xe0 0x80 0x10 0x07 0x26 0x07 0x80
0x89 0xa0 0x00 0x11 0x08 0xf3 0x89 0x44
0xd1 0x99 0x2c 0x10 0x01 0x89 0x01 0x28
0xff 0x2e 0xf0 0x10 0x05 0x00 0x05 0xa0
0x3c 0xfd 0x39 0x11 0x02 0xd1 0x10 0x2c
0x29 0xa5 0xa0 0x10 0x08 0x1f 0x29 0xa4
0x1e 0x52 0x32 0x10 0x05 0xf9 0x05 0x24
0x80 0x63 0x97 0x11 0x09 0xa3 0x38 0x84
0x16 0x4d 0x75 0x10 0x07 0xc1 0x07 0x24
0xbe 0x65 0x39 0x11 0x04 0x2b 0x20 0x2c
0xb4 0x4a 0x28 0x11 0x09 0x85 0x00 0x28
0x6b 0x19 0xe6 0x10 0x03 0x20 0x03 0xa0
0x4b 0x02 0x0b 0x10 0x08 0xf9 0x4b 0x08
0x07 0xb2 0x37 0x10 0x08 0xea 0x07 0x24
0x21 0x7d 0x8a 0x10 0x08 0xe2 0x21 0x88
0x7b 0xbd 0x8b 0x11 0x09 0x59 0x38 0x88
0x43 0xb5 0xeb 0x11 0x01 0xcb 0x08 0xa8
0xf3 0xc7 0x7d 0x10 0x03 0xca 0x03 0x28
0x4a 0x52 0x12 0x10 0x06 0x71 0x06 0x00
0x8a 0xda 0xeb 0x10 0x08 0x59 0x8a 0xac
0xf3 0x18 0x16 0x10 0x07 0x96 0x07 0x04
0xbd 0x81 0x33 0x11 0x08 0x88 0xbd 0x24
0x76 0xb1 0x54 0x11 0x08 0xe7 0x76 0x04
0x47 0xf7 0x2d 0x11 0x09 0x22 0x00 0x28
0x9f 0x82 0x84 0x11 0x07 0x89 0x38 0x84
0xec 0x42 0x8a 0x11 0x08 0xd4 0xec 0x88
0x3a 0xa8 0x3d 0x10 0x04 0xd8 0x04 0x2c
0x6e 0x6b 0xb2 0x10 0x03 0x1c 0x03 0xa0
0x3d 0xde 0x40 0x10 0x08 0x51 0x3d 0x00
0x3b 0x92 0x79 0x10 0x09 0xd7 0x00 0x28
0x5b 0x7b 0x47 0x10 0x08 0x90 0x5b 0x04
0xab 0xad 0x6d 0x10 0x08 0xb7 0xab 0x28
0xa7 0x82 0x71 0x11 0x09 0x11 0x00 0x24
0x96 0x5c 0x4a 0x10 0x08 0xb8 0x96 0x08
0x22 0xe0 0x69 0x10 0x05 0x27 0x05 0x2c
0xbe 0xb8 0xcf 0x11 0x08 0x06 0xbe 0x88
0x9c 0x9e 0xdc 0x11 0x08 0x7f 0x9c 0x8c
0x06 0x53 0x68 0x11 0x06 0x3e 0x30 0x2c
0xcb 0x29 0xbd 0x10 0x09 0xc9 0x07 0xac
0x25 0xa7 0xf0 0x11 0x04 0x91 0x20 0xa0
0x27 0x23 0x2a 0x10 0x08 0x51 0x27 0x28
0xb5 0xb3 0x03 0x10 0x08 0x29 0xb5 0x04
0xa1 0x75 0x2b 0x10 0x08 0x51 0xa1 0x2c
0x10 0x1d 0x0a 0x10 0x05 0x18 0x05 0x0c
0x5d 0x9a 0xaa 0x11 0x09 0xd6 0x00 0xa8
0x61 0x3d 0x87 0x10 0x01 0x35 0x01 0x84
0xbc 0x97 0x81 0x10 0x08 0x44 0xbc 0x84
0xe2 0xa7 0x59 0x11 0x06 0x29 0x30 0x08
0xc7 0xc4 0x4a 0x10 0x08 0xb1 0xc7 0x08
0xcd 0x33 0xa8 0x10 0x08 0xd0 0xcd 0xa8
0x48 0xfd 0x58 0x10 0x06 0x6f 0x06 0x0c
0x22 0xc2 0xc2 0x10 0x09 0x01 0x00 0x84
0xad 0xf2 0xbc 0x11 0x09 0x16 0x00 0xac
0x2f 0xe6 0x8d 0x11 0x09 0xae 0x00 0x88
0xc7 0x25 0x35 0x11 0x09 0x16 0x00 0x20
0x94 0x3b 0x44 0x10 0x08 0x12 0x94 0x04
0x9a 0x23 0x81 0x11 0x08 0x71 0x9a 0x84
0x4b 0x11 0xb2 0x11 0x02 0xa1 0x10 0xa4
0x5f 0xb9 0xcf 0x10 0x05 0xab 0x05 0x8c'
{

  echo '# This file is part of the Spectrum +4 Project.'
  echo '# Licencing information can be found in the LICENCE file'
  echo '# (C) 2021 Spectrum +4 Authors. All rights reserved.'
  echo
  echo "# This file is auto-generated by ${0##*/}." 'DO NOT EDIT!'
  echo
  echo
  echo '.text'

  i=0
  echo "${input}" | while read attr_t mask_t p_flag a d f c_upd f_upd; do
    testname=$(printf "co_temp_5_ink_paper_%02x" $i)
    i=$((i + 1))
    echo
    echo
    echo "${testname}_setup:"
    echo "  _strb   ${attr_t}, ATTR_T"
    echo "  _strb   ${mask_t}, MASK_T"
    echo "  _strb   ${p_flag}, P_FLAG"
    echo "  ret"
    echo
    echo "${testname}_setup_regs:"
    echo "  ld      a, ${a}"
    echo "  ld      d, ${d}"
    echo "  ldf     ${f}"
    echo "  ret"
    echo
    echo "${testname}_effects:"
    if [ "${d}" == "0x08" ]; then
      if [ "${a}" == "0x10" ]; then
        # => INK 8
        # ATTR_T not updated because INK colour comes from attribute file
        # MASK_T has bits 0-2 set to indicate INK comes from attribute file
        printf "  _strb   0x%02x, MASK_T\n" $((mask_t | 0x07))
        # P_FLAG has bit 4 cleared, to disable "INK 9" setting
        printf "  _strb   0x%02x, P_FLAG\n" $((p_flag & 0xef))
      else
        # => PAPER 8
        # ATTR_T not updated because PAPER colour comes from attribute file
        # MASK_T has bits 3-5 set to indicate PAPER comes from attribute file
        printf "  _strb   0x%02x, MASK_T\n" $((mask_t | 0x38))
        # P_FLAG has bit 6 cleared, to disable "PAPER 9" setting
        printf "  _strb   0x%02x, P_FLAG\n" $((p_flag & 0xbf))
      fi
    elif [ "${d}" == "0x09" ]; then
      if [ "${a}" == "0x10" ]; then
        # => INK 9
        # ATTR_T has bits 0-2 (INK colour) set to the inverse of bit 5 (leading PAPER bit).
        # Note this is only relevant if PAPER 9 is also used, and then only bit
        # 2 is significant (bits 0 and 1 are not used) since bit 2 of ATTR_T
        # will determine PAPER colour in po_attr routine.
        printf "  _strb   0x%02x, ATTR_T\n" $((attr_t & 0xf8 | 0x07 * (1 - ((attr_t & 0x20) >> 5))))
        # MASK_T has no effect when P_FLAG bit 4 (INK 9) is set, so this update is not meaningful
        # The update is the same as for INK 8 (suggesting INK comes from attribute file)
        printf "  _strb   0x%02x, MASK_T\n" $((mask_t | 0x07))
        # P_FLAG bit 4 is set, to enable "INK 9" setting
        printf "  _strb   0x%02x, P_FLAG\n" $((p_flag | 0x10))
      else
        # => PAPER 9
        # ATTR_T has bits 3-5 (PAPER colour) set to the inverse of bit 2 (leading INK bit)
        printf "  _strb   0x%02x, ATTR_T\n" $((attr_t & 0xc7 | 0x38 * (1 - ((attr_t & 0x04) >> 2))))
        # MASK_T has no effect when P_FLAG bit 6 (PAPER 9) is set, so this update is not meaningful
        # The update is the same as for PAPER 8 (suggesting PAPER comes from attribute file)
        printf "  _strb   0x%02x, MASK_T\n" $((mask_t | 0x38))
        # P_FLAG bit 6 is set, to enable "PAPER 9" setting
        printf "  _strb   0x%02x, P_FLAG\n" $((p_flag | 0x40))
      fi
    else
      if [ "${a}" == "0x10" ]; then
        # => INK 0-7
        # ATTR_T has bits 0-2 updated with INK colour
        printf "  _strb   0x%02x, ATTR_T\n" $((attr_t & 0xf8 | d))
        # MASK_T has bits 0-2 cleared, so that INK colour bits are taken from ATTR_T
        printf "  _strb   0x%02x, MASK_T\n" $((mask_t & 0xf8))
        # P_FLAG has bit 4 cleared, to disable "INK 9" setting
        printf "  _strb   0x%02x, P_FLAG\n" $((p_flag & 0xef))
      else
        # => PAPER 0-7
        # ATTR_T has bits 3-5 updated with PAPER colour
        printf "  _strb   0x%02x, ATTR_T\n" $((attr_t & 0xc7 | (d << 3)))
        # MASK_T has bits 3-5 cleared, so that PAPER colour bits are taken from ATTR_T
        printf "  _strb   0x%02x, MASK_T\n" $((mask_t & 0xc7))
        # P_FLAG has bit 6 cleared, to disable "PAPER 9" setting
        printf "  _strb   0x%02x, P_FLAG\n" $((p_flag & 0xbf))
      fi
    fi
    echo "  ret"
    echo
    echo "${testname}_effects_regs:"
    # On exit, A holds the P_FLAG mask for INK 9 or PAPER 9, depending on
    # whether entry value for A was 0x10 (INK) or 0x11 (PAPER) respectively.
    # The P_FLAG mask for INK 9 is 0x10 and the P_FLAG mask for PAPER 9 is
    # 0x40. It is a sheer coincidence that A is then unchanged by this routine
    # if on entry it is 0x10, since that is both the control character for INK
    # _and_ the P_FLAG mask for INK 9. Note, we do not test invalid INK values
    # here such as INK 17, since the stack gets rewritten in the case of an
    # error, and the routine doesn't return as normal.
    if [ "${a}" == "0x11" ]; then
      echo "  ld      a, 0x40"
    fi
    echo "  ld      b, a"
    echo "  ld      c, ${c_upd}"
    if [ "${f_upd}" != "${f}" ]; then
      echo "  ldf     ${f_upd}"
    fi
    echo "  ld      hl, P_FLAG+1"
    echo "  ret"
  done
} | ../../../utils/asm-format/asm-format > "test_co_temp_5.ink_paper.gen-s"

# attr_t mask_t p_flag a d f a_upd b_upd c_upd f_upd
input='0x84 0x49 0x00 0x14 0x00 0x98 0x04 0x04 0x00 0x44
0xb4 0x0c 0xff 0x14 0x01 0xc7 0x04 0x04 0x04 0xac
0x9c 0x9e 0x55 0x14 0x00 0x7f 0x04 0x04 0x00 0x00
0x06 0x53 0xaa 0x14 0x01 0x3e 0x04 0x04 0x04 0xa8
0xcb 0x29 0x35 0x15 0x00 0xc9 0x01 0x01 0x00 0x20
0x25 0xa7 0xca 0x15 0x01 0x91 0x01 0x01 0x01 0x88
0x80 0xc2 0x29 0x15 0x00 0x69 0x01 0x01 0x00 0x2c
0x5f 0xb9 0xd6 0x15 0x01 0xab 0x01 0x01 0x01 0x84'
{

  echo '# This file is part of the Spectrum +4 Project.'
  echo '# Licencing information can be found in the LICENCE file'
  echo '# (C) 2021 Spectrum +4 Authors. All rights reserved.'
  echo
  echo "# This file is auto-generated by ${0##*/}." 'DO NOT EDIT!'
  echo
  echo
  echo '.text'

  i=0
  echo "${input}" | while read attr_t mask_t p_flag a d f a_upd b_upd c_upd f_upd; do
    testname=$(printf "co_temp_5_inverse_over_%02x" $i)
    i=$((i + 1))
    echo
    echo
    echo "${testname}_setup:"
    echo "  _strb   ${attr_t}, ATTR_T"
    echo "  _strb   ${mask_t}, MASK_T"
    echo "  _strb   ${p_flag}, P_FLAG"
    echo "  ret"
    echo
    echo "${testname}_setup_regs:"
    echo "  ld      a, ${a}"
    echo "  ld      d, ${d}"
    echo "  ldf     ${f}"
    echo "  ret"
    echo
    echo "${testname}_effects:"
    if [ "${a}" == "0x14" ]; then
      if [ "${d}" == "0x00" ]; then
        printf "  _strb   0x%02x, P_FLAG\n" $((p_flag & 0xfb))
      else
        printf "  _strb   0x%02x, P_FLAG\n" $((p_flag | 0x04))
      fi
    else
      if [ "${d}" == "0x00" ]; then
        printf "  _strb   0x%02x, P_FLAG\n" $((p_flag & 0xfe))
      else
        printf "  _strb   0x%02x, P_FLAG\n" $((p_flag | 0x01))
      fi
    fi
    echo "  ret"
    echo
    echo "${testname}_effects_regs:"
    echo "  ld      b, ${b_upd}"
    if [ "${a_upd}" != "${a}" ]; then
      echo "  ld      a, ${a_upd}"
    fi
    echo "  ld      c, ${c_upd}"
    if [ "${f_upd}" != "${f}" ]; then
      echo "  ldf     ${f_upd}"
    fi
    echo "  ld      hl, P_FLAG+1"
    echo "  ret"
  done
} | ../../../utils/asm-format/asm-format > "test_co_temp_5.inverse_over.gen-s"
