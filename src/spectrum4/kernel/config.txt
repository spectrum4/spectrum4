# This file is part of the Spectrum +4 Project.
# Licencing information can be found in the LICENCE file
# (C) 2021 Spectrum +4 Authors. All rights reserved.

# See https://www.raspberrypi.com/documentation/computers/config_txt.html for
# an explanation of the purpose and format of this file.

# The [pi4] section applies to Model 4B, Pi 400, Compute Module 4
[pi4]

# Increase default turbo-mode clock from 1.5GHz to 1.8GHz. Why not!
arm_boost=1

# Dynamic frequency clocking minimum value needed for Mini UART to function correctly.
core_freq_min=500

# Use the Cortex A72 GIC-400 rather than legacy BCM interrupt controller
enable_gic=1

# The [all] section applies to all Raspberry Pi models.
[all]

# Stop start(4).elf from filling in ATAGS (memory from 0x100) before launching
# the kernel. Our kernel is located at physical address 0x0, so we don't want
# this. Note, even if we located our kernel at a higher address, I believe not
# having this setting would require a .dtb file to be present on the SD card,
# which we don't have nor really want.
disable_commandline_tags=1

# GPU memory in megabytes, sets the memory split between the CPU and GPU; the
# CPU gets the remaining memory. The minimum value is 16; the maximum value is
# 192, 448, or 944, depending on whether you are using a 256MB, 512MB, or
# 1024MB Pi. The default value is 64. For the Raspberry Pi 4, which is
# available in 1GB, 2GB and 4GB versions, the minimum and maximum value are the
# same as for a 1GB device.
#
# Setting gpu_mem to low values may automatically disable certain firmware
# features, as there are some things the GPU cannot do if it has access to too
# little memory. So if a feature you are trying to use isn't working, try
# setting a larger GPU memory split.
gpu_mem=64

# Disable initial turbo since it affects Mini UART timing.
# See https://github.com/raspberrypi/firmware/issues/1945
initial_turbo=0

# Load the kernel at memory address 0x0.
kernel_old=1

# Ensure the bootloader loads a 64-bit kernel (not entirely necessary but a
# good safety check).
arm_64bit=1

# Name of kernel image file. Let's customise it rather than have kernel8.img
# to be all fancy (like RISC OS does).
kernel=spectrum4.img
