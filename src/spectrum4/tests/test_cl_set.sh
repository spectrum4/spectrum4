#!/usr/bin/env bash

# This file is part of the Spectrum +4 Project.
# Licencing information can be found in the LICENCE file
# (C) 2021 Spectrum +4 Authors. All rights reserved.

function header {
  echo '# This file is part of the Spectrum +4 Project.'
  echo '# Licencing information can be found in the LICENCE file'
  echo '# (C) 2021 Spectrum +4 Authors. All rights reserved.'
  echo
  echo "# This file is auto-generated by ${0##*/}." 'DO NOT EDIT!'
  echo
  echo
  echo '.if ROMS_INCLUDE'
  echo '.else'
  echo '  .include "cl_addr.s"'
  echo '  .include "po_store.s"'
  echo '  .include "print_w0.s"'
  echo '.endif'
  echo
  echo '.text'
  echo '.align 2'
}

cd "$(dirname "${0}")"

{
  header
  for ((c=1; c<110; c++)); do
    hexc=$(printf "%02x" $c)
    proffset=$((109-c))
    hexproffset=$(printf "%04x" $proffset)
    echo
    echo
    echo "cl_set_printer_${hexc}_setup:"
    echo "  _setbit 1, FLAGS"
    echo "  ret"
    echo
    echo "cl_set_printer_${hexc}_setup_regs:"
    echo "  mov     x1, 0x${hexc}"
    echo "  ret"
    echo
    echo "cl_set_printer_${hexc}_effects:"
    echo "  _strb   0x${hexc}, P_POSN_X"
    echo "  _str    (printer_buffer + 0x${hexproffset}), PR_CC"
    echo "  ret"
    echo
    echo "cl_set_printer_${hexc}_effects_regs:"
    echo "  adrp    x2, (printer_buffer + 0x${hexproffset})"
    echo "  add     x2, x2, :lo12:(printer_buffer + 0x${hexproffset})"
    echo "  ldrb    w3, [x28, FLAGS-sysvars]"
    echo "  ret"
  done
} | ../../../utils/asm-format/asm-format > "test_cl_set.printer.gen-s"

{
  header
  for ((c=1; c<110; c+=3)); do
    hexc=$(printf "%02x" $c)
    x=$((109-c))
    for b in 1 2 32 50 60; do
      y=$((60-b))
      screenthird=$((y/20))
      yoffset=$((y-20*screenthird))
      hexb=$(printf "%02x" $b)
      dfoffset=$((2*x + screenthird*216*16*20 + 216*yoffset))
      hexdfoffset=$(printf "%04x" $dfoffset)
      echo
      echo
      echo "cl_set_upper_screen_${hexc}_${hexb}_setup:"
      echo "  _resbit 1, FLAGS"
      echo "  _resbit 0, TV_FLAG"
      echo "  ret"
      echo
      echo "cl_set_upper_screen_${hexc}_${hexb}_setup_regs:"
      echo "  mov     x0, 0x${hexb}"
      echo "  mov     x1, 0x${hexc}"
      echo "  ret"
      echo
      echo "cl_set_upper_screen_${hexc}_${hexb}_effects:"
      echo "  _strb   0x${hexc}, S_POSN_X"
      echo "  _strb   0x${hexb}, S_POSN_Y"
      echo "  _str    (display_file + 0x${hexdfoffset}), DF_CC"
      echo "  ret"
      echo
      echo "cl_set_upper_screen_${hexc}_${hexb}_effects_regs:"
      echo "  adrp    x2, (display_file + 0x${hexdfoffset})"
      echo "  add     x2, x2, :lo12:(display_file + 0x${hexdfoffset})"
      echo "  ldrb    w3, [x28, TV_FLAG-sysvars]"
      echo "  mov     x4, #${yoffset}"
      echo "  mov     x5, #216"
      echo "  ldr     x6, =0x10e00"
      echo "  ret"
    done
  done
} | ../../../utils/asm-format/asm-format > "test_cl_set.upperscreen.gen-s"


{
  header
  for c in 1 5 23 40 75 108 109; do
    hexc=$(printf "%02x" $c)
    x=$((109-c))
    for df_sz in 1 12 19 47 48 49 60; do
      hexdfsz=$(printf "%02x" $df_sz)
      for ((b=61-df_sz; b<61; b+=5)); do
        y=$((120-b-df_sz))
        screenthird=$((y/20))
        yoffset=$((y-20*screenthird))
        hexb=$(printf "%02x" $b)
        dfoffset=$((2*x + screenthird*216*16*20 + 216*yoffset))
        hexdfoffset=$(printf "%04x" $dfoffset)
        echo
        echo
        echo "cl_set_lower_screen_${hexc}_${hexb}_${hexdfsz}_setup:"
        echo "  _resbit 1, FLAGS"
        echo "  _setbit 0, TV_FLAG"
        echo "  _strb   0x${hexdfsz}, DF_SZ"
        echo "  ret"
        echo
        echo "cl_set_lower_screen_${hexc}_${hexb}_${hexdfsz}_setup_regs:"
        echo "  mov     x0, 0x${hexb}"
        echo "  mov     x1, 0x${hexc}"
        echo "  ret"
        echo
        echo "cl_set_lower_screen_${hexc}_${hexb}_${hexdfsz}_effects:"
        echo "  _strb   0x${hexc}, S_POSN_X_L"
        echo "  _strb   0x${hexb}, S_POSN_Y_L"
        echo "  _strb   0x${hexc}, ECHO_E_X"
        echo "  _strb   0x${hexb}, ECHO_E_Y"
        echo "  _str    (display_file + 0x${hexdfoffset}), DF_CC_L"
        echo "  ret"
        echo
        echo "cl_set_lower_screen_${hexc}_${hexb}_${hexdfsz}_effects_regs:"
        echo "  adrp    x2, (display_file + 0x${hexdfoffset})"
        echo "  add     x2, x2, :lo12:(display_file + 0x${hexdfoffset})"
        echo "  ldrb    w3, [x28, TV_FLAG-sysvars]"
        echo "  mov     x4, #${yoffset}"
        echo "  mov     x5, #216"
        echo "  ldr     x6, =0x10e00"
        echo "  ret"
      done
    done
  done
} | ../../../utils/asm-format/asm-format > "test_cl_set.lowerscreen.gen-s"
