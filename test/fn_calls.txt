_start:
    uart_init
    init_framebuffer
    restart
sleep:
    sleep
init_framebuffer:
    mbox_call
mbox_call:
wait_cycles:
uart_init:
uart_send:
reboot:
    wait_cycles
    mbox_call
    sleep
paint_border:
    paint_rectangle
    paint_rectangle
    paint_rectangle
    paint_rectangle
paint_rectangle:
fill_rectangle:
fill_line:
paint_window:
    paint_rectangle
restart:
    new
pin:
pout:
new:
    paint_border
    cls
    sleep
print_message:
    print_w0
initial_channel_info:
initial_channel_info_END:
initial_stream_data_END:
error_1:
print_w0:
tkn_table:
less_equal:
print_out:
    po_fetch
    po_able
    po_quest
ctlchrtab:
po_back:
    cl_set
po_right:
    po_able
po_enter:
    po_scr
    cl_set
    add_char
po_comma:
    po_fill
po_quest:
    po_able
po_tv_2:
po_2_oper:
    po_tv_1
po_1_oper:
    po_tv_1
po_tv_1:
po_cont:
po_at_set:
    co_temp_5
    to_end
to_co_temp_5:
    co_temp_5
    to_end
to_end:
po_fill:
    print_w0
po_able:
    po_any
    po_store
po_store:
po_fetch:
po_any:
    po_mosaic_half
    po_mosaic_half
    pr_all
    po_char
    po_t_udg
po_mosaic_half:
po_t_udg:
    co_temp_5
po_t_udg_1:
    po_char_2
po_t:
    po_tokens
    po_fetch
po_char:
    po_char_2
po_char_2:
    pr_all
pr_all:
    add_char
    po_scr
po_msg:
    po_table
po_tokens:
    po_table
po_table:
    po_table_1
po_table_1:
    po_save
    po_save
    po_save
po_save:
    print_w0
po_scr:
    cl_set
    po_scr_3
    chan_open
    po_scr_3
po_scr_2:
    chan_open
    po_msg
po_scr_3:
report_5:
temps:
cls:
    cl_all
    cls_lower
cls_lower:
    temps
    cl_line
    cl_chan
cl_chan:
    chan_open
    cl_set
cl_all:
    cl_chan
    chan_open
    temps
    cl_line
    cl_set
cl_set:
    po_store
cl_line:
add_char:
key_input:
chan_open:
    chan_flag
chan_flag:
chn_cd_lu:
chan_k:
    temps
chan_s:
    temps
chan_p:
report_j:
co_temp_5:
    po_t_udg_1
    po_table_1
    po_tokens
    po_fetch
